[{"title":"","date":"2018-01-08T18:09:36.651Z","path":"2018/01/09/find_and_pack/","text":"questionsFind and package the specified filesintroduceThe challenges you need to find the /etc directory to meet the needs of the file, then, package and compress the file into a tar.gz package. First, create a folder /home/shiyanlou/backup, and all the files that need to be packaged will be copied to this directory. Then, copy all the files larger than 12K to the /home/shiyanlou/backup directory in the /etc directory of the lab building, and we need to keep the directory structure. For example, the /etc/apt/trusted.gpg file is 14K, and it will be copied to the /home/shiyanlou/backup/etc/apt/trusted.gpg path position. Notice that there are many files in the subfolder under the /etc directory that are more than 12K and need to be copied. After the copy is completed, the /home/shiyanlou/backup is packaged and compressed, and the generated packet backup.tar.gz is placed under the /tmp/backup.tar.gz path. Click to submit the result after the completion of the above task. target The compressed packet backup.tar.gz is placed under the /tmp/backup.tar.gz path The compressed package backup.tar.gz contains all the files larger than 12K under the /etc directory, regardless of whether the shiyanlou user has access to the file or not. Please do not use soft links, such as the need to complete the copy of the file past. Hint find, copy, pack, compress Knowledge point Linux file and directory operation Linux file lookup operation Tar command package Gzip command compression keypointThe find command looks up some files and copies them to the specified directory 12&gt; sudo find /etc -size +12k -exec cp --parents &#123;&#125; backup \\;&gt; &gt; exec cp --parents references find,cp,exec-sample find,cp,exec-detail Preserving directory structure application instances when CP copies tools linux command search","tags":[]},{"title":"","date":"2018-01-08T18:09:36.651Z","path":"2018/01/09/monitor_mysql/","text":"questionmonitor service with bashintroduceOn the server, our services may be hung up for a variety of reasons, such as mongodb Out of memory, and the system is kill, resulting in the service can not work properly. So we need a simple monitoring script check_service.sh to view the status of our service in real time. If the service state is stopped, we can try to restart the service automatically. The script can accept a parameter, which is the name of the service. The name of the service can use the service command to view, start and stop the state. For example, check the status of the MySQL service.12$bash /home/shiyanlou/check_service.sh mysqlIs Running If the MySQL service is not running, the MySQL service is started and the following output information is printed:12$bash /home/shiyanlou/check_service.sh mysqlRestarting If the service does not exist, the error information is output:12$bash /home/shiyanlou/check_service.sh notfoundserviceError: Service Not Found target The script is named check_serive.sh, and the path must be /home/shiyanlou/check_service.sh The script can accept a parameter, the parameter is the name of the service, and the check_service.sh service name can be called in this way If the service is running “is Running”, if the service is stopped, the service is started, and if the service does not exist, output error information /home/shiyanlou/check_service.sh mysql is put into crontab once a day, which can ensure that MySQL service can be restarted when it is hung up, and we need to manually start cron service. Hint You can use sudo service xxx start/status/stop for service management Use of command line position parameters Service status information use can be judged by grep Knowledge point Bash process control The control of service and process Crontab keypoint123456789101112#!/bin/bashif [ `ps -ef|grep -v grep|grep $1|wc -l` -gt 3 ];then echo \"is Running\"else sudo service $1 start if [ `ps -ef|grep -v grep|grep $1|wc -l` -gt 2 ];then echo \"Restarting\" else echo \"Error:Service Not Found\" fifi 123456789101112#!/bin/bashif [ `netstat -at|grep $1|wc -l` -gt 0 ];then echo \"is Running\"else sudo service $1 start if [ `netstat -at|grep $1|wc -l` -gt 0 ];then echo \"Restarting\" else echo \"Error:Service Not Found\" fifi view the process ps -ef grep -v exclude the grep process wc -l count row num netstat -at|grep mysql pstree show the derived relation between the proceses in a tree diagram way start crontab sudo service rsyslog start sudo cron -f &amp;","tags":[]},{"title":"","date":"2018-01-08T18:09:36.651Z","path":"2018/01/09/sed_markdown/","text":"questionoptimize markdown documents with sedintroduceYou are the document inspector of the shiyanlou, need to check document format every day, a document found in different marks appear blank between too much (provisions require only a blank document appeared in 2, 3 cases), and all the image formats are written into the link, need you use this document to quickly repair Sed. For example, a document does not regulate instances and link errors:123456789## title one## Title Two## Title Three[picture-1] (https://www.shiyanlou.com/test.png) Title Two and Title Three require only one empty line directly. you should execute the Sed script in this way:1Sed -f /home/shiyanlou/fix-format.sed document After execution, the document is turned into:1234567## title one## Title Two## Title Three[picture-1] (https://www.shiyanlou.com/test.png) target The script path must be placed in the /home/shiyanlou/fix-format.sed The way to call is: sed -f /home/shiyanlou/fix-format.sed document Delete extra repeat blank lines in a document revising the format of the picture link Hint sed matching empty lines the hints of the picture link are all in [picture-xxx] format, and the suffix of the address is.Png or.Jpg test document download link: http://labfile.oss.aliyuncs.com/courses/980/test-document.md Knowledge point regular expression Sed keypoint delete rows retain only one line 1234/^$/&#123; N /^\\n$/D&#125; replace 1s/\\[picture/\\!\\[picture/ Note that the escape character references my-knowledge-sed","tags":[]},{"title":"","date":"2018-01-08T18:09:36.651Z","path":"2018/01/09/stdout_stderr/","text":"determine if output is stdout or stderrsolution redireciton standard input: 0 standard output: 1 standard error: 2 print STDERR in red1bash func 2&gt; &gt;(while read line; do echo -e \"\\e[01;31m$line\\e[0m\" &gt;&amp;2;done) 实验楼 references determine if output is stdout or stderr bash:print stderr in red color","tags":[]},{"title":"Hello World","date":"2018-01-08T16:16:40.399Z","path":"2018/01/09/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]},{"title":"crontab","date":"2017-12-11T16:00:00.000Z","path":"2017/12/12/crontab/","text":"questionPeriodically pack a backup logintroduceYou are the server administrator of the experiment building, and you need to back up the log files in the /var/log directory every day. After the backup is packed and compressed for a long time, the file name is stored in the format of the year-month-day.Tar.gz. For example, the file backed up in November 1, 2017 is 2017-11-01.tar.gz, and the files after the backup are stored in the /home/shiyanlou/backup directory. Note that you need to use the method of incremental backup of the tar command to make a backup. target Add planning tasks for shiyanlou users Every day at 3 a.m., back up the /var/log directory to the /home/shiyanlou/backup/year-month-day.Tar.gz file, and note that it is an incremental backup. Backup file naming format is year-month-day.Tar.gz Write to crontab with a command, do not write the scriptHint Crontab sets a tar command for an incremental backup of the specified time. Knowledge pointDate formatted output stringCrontab set planning tasksTar command incremental backup mode keypoint 0 3 * tar -cvf /home/shiyanlou/backup/$(date +\\%Y-\\%m-\\%d).tar.gz -g /var/log tar.gz 0 3 \\%Y\\%m\\%d\\%H\\%M\\%S how to start cron12sudo service rsyslog startsudo cron -f &amp; check whether cron is started123ps aux|grep cronorpgrep cron edit1crontab -e list1crontab -l remove1crontab -r","tags":[{"name":"linux","slug":"linux","permalink":"http://kinglion580.github.io/tags/linux/"},{"name":"cron","slug":"cron","permalink":"http://kinglion580.github.io/tags/cron/"}]}]